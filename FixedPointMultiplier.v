// ********************************************************************
//
// Copyright (C) 1994-2014, Synopsys Inc.  All Rights Reserved

// This code was generated by Synopsys's Synphony Model Compiler product and
// is intended for use solely by licensed users of this product.

// VERILOG created by Synphony Model Compiler J-2014.09, Build 015R, Aug 22 2014
// Date written:             Wed Nov  1 20:22:24 2017

// ********************************************************************

// Generated from /w/ee.00/abidi/uneeb93/Projects/TASHIP_Project/MATLAB/FixedPointMultiplier.slx Version 1.8 Last modified date Wed Nov 01 19:36:06 2017
//@
module FixedPointMultiplier (
  input clk,
  input GlobalReset,
  input [18:0] WeightPort, // sfix19_En18
  input [9:0] PixelPort, // sfix10_En0
  output [25:0] Output_syn // sfix26_En18
//@
);
//@

wire [25:0] N_1;  
wire [9:0] N_2;  
wire [18:0] N_3;  
wire [0:0] GlobalEnableSignal1;  
wire GlobalResetSel;
  wire GlobalEnable1;
  assign GlobalEnable1 = 1;
  assign GlobalEnableSignal1 = GlobalEnable1;
  assign N_3 = WeightPort;
  assign N_2 = PixelPort;
assign Output_syn = N_1;
  generate
  begin: Multiplier_25b_18f_block
    wire signed [28:0] tmpOut;
    wire signed [9:0] tmpin1;
    wire signed [18:0] tmpin2;
    wire signed [9:0] tmpin1_dly;
    wire signed [18:0] tmpin2_dly;
    wire signed [28:0] med;
    assign med = tmpOut ;
    synDelayWithEnable #( .bitwidth(26), .preferRAMImpl(2), .delaylength(5) ) multOut_block ( .clk(clk), .en(GlobalEnable1), .grst(GlobalResetSel), .rst(1'b0), .inp(med[25:0]), .outp(N_1) );
    assign tmpin1 = $signed(N_2);
    assign tmpin2 = $signed(N_3);
    synDelayWithEnable #( .bitwidth(10), .preferRAMImpl(2), .delaylength(1) ) multInp1_block ( .clk(clk), .en(GlobalEnable1), .grst(GlobalResetSel), .rst(1'b0), .inp(tmpin1), .outp(tmpin1_dly) );
    synDelayWithEnable #( .bitwidth(19), .preferRAMImpl(2), .delaylength(1) ) multInp2_block ( .clk(clk), .en(GlobalEnable1), .grst(GlobalResetSel), .rst(1'b0), .inp(tmpin2), .outp(tmpin2_dly) );
    assign tmpOut = tmpin1_dly * tmpin2_dly;
  end // Multiplier_25b_18f_block
  endgenerate
assign GlobalResetSel = GlobalReset;
endmodule

//-----------------------------------------

